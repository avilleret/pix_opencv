#N canvas 78 93 985 540 10;
#X obj 17 207 cnv 15 430 320 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 17 161 cnv 15 430 40 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 26 165 Arguments:;
#X obj 17 66 cnv 15 430 90 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 22 28 Class: pix_opencv;
#X text 47 185 none;
#X obj 459 8 cnv 15 510 520 empty empty empty 20 12 0 14 -228992 -66577
0;
#X obj 611 358 cnv 15 280 80 empty empty empty 20 12 0 14 -24198 -66577
0;
#X floatatom 744 401 5 0 0 0 - - -;
#X obj 615 418 pix_opencv_bgsubstract;
#X msg 627 362 set;
#X text 663 362 set the background;
#X text 741 385 threshold (default 13);
#X obj 641 17 gemhead;
#X obj 615 445 pix_texture;
#X obj 615 464 square 2;
#X obj 741 449 cnv 15 220 70 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 50 454 304 gemwin 0;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 65 41 route create;
#X msg 67 70 set destroy;
#X msg 182 68 set create;
#N canvas 87 154 247 179 Gem.init 0;
#X obj 118 46 loadbang;
#X msg 118 81 reset;
#X obj 118 113 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 289 80 pd Gem.init;
#X obj 162 241 gemwin;
#X msg 161 188 create \, 1;
#X msg 237 189 destroy;
#X msg 283 161 frame 25;
#X obj 164 126 t b b b;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 10 0;
#X connect 2 1 4 0;
#X connect 2 1 8 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 10 2 9 0;
#X restore 751 493 pd gemwin;
#X msg 751 475 destroy;
#X obj 464 443 pix_texture;
#X obj 464 462 square 2;
#X obj 615 311 separator;
#X obj 653 44 bng 25 250 50 0 load empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 710 219 bng 15 250 50 0 empty empty end_reached 20 7 0 10 -262144
-1 -1;
#X floatatom 692 184 5 0 10000 1 frame# - -;
#X obj 653 73 openpanel;
#X msg 653 93 open \$1;
#X obj 641 202 pix_film;
#X msg 659 136 auto \$1;
#X obj 659 118 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1
1;
#X text 749 455 Create window and render;
#X msg 754 119 colorspace RGBA;
#X msg 765 138 colorspace RGB;
#X msg 772 158 colorspace Grey;
#X obj 754 91 loadbang;
#X obj 615 290 pix_separator;
#X obj 464 311 separator;
#X obj 464 291 pix_separator;
#X obj 464 331 translateXYZ -2 0 0;
#X obj 615 331 translateXYZ 2 0 0;
#N canvas 1 168 274 158 vswitch 0;
#X obj 36 138 outlet;
#X obj 36 26 inlet;
#X obj 100 29 inlet;
#X obj 153 29 inlet;
#X obj 89 69 == 0;
#X obj 36 101 spigot 1;
#X obj 100 101 spigot 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 3 0 6 1;
#X connect 4 0 5 1;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X restore 464 248 pd vswitch;
#X obj 532 248 tgl 15 0 empty load empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 464 200 pix_video;
#X obj 464 15 gemhead;
#X msg 503 125 device 0;
#X msg 512 156 driver 1;
#X msg 489 71 dialog;
#X msg 494 101 device /dev/dv1394-0;
#X text 24 409 written by Yves Degoyon ( ydegoyon@gmail.com );
#X text 23 12 Synopsis: [pix_opencv_bgsubstract];
#X text 22 227 Useful if you want to detect dynamic objects over a
static background.;
#X text 22 274 This object takes an image as a background reference
and compare each incomming frame with that. On the output you get a
b&w image \, black pixels are considered as background and white pixels
as foreground.;
#X text 21 334 pix_opencv_bgsubstract works comparing color values
of each pixel \, so it can fail if the foreground object has the same
color than the background \, and also if the light conditions or the
shadows change since you SET the background image.;
#X text 27 83 pix_opencv_bgsubstract :: A very simple background substractor
and binarization object.;
#X obj 464 268 pix_gray;
#X connect 8 0 9 1;
#X connect 9 0 14 0;
#X connect 10 0 9 0;
#X connect 13 0 27 0;
#X connect 14 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 21 0 39 0;
#X connect 22 0 25 0;
#X connect 23 0 24 0;
#X connect 24 0 27 1;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 40 1;
#X connect 27 2 23 0;
#X connect 28 0 27 0;
#X connect 29 0 28 0;
#X connect 31 0 27 0;
#X connect 31 0 42 0;
#X connect 32 0 27 0;
#X connect 33 0 27 0;
#X connect 34 0 31 0;
#X connect 34 0 29 0;
#X connect 35 0 21 0;
#X connect 36 0 38 0;
#X connect 37 0 36 0;
#X connect 38 0 19 0;
#X connect 39 0 9 0;
#X connect 40 0 54 0;
#X connect 41 0 40 2;
#X connect 42 0 40 0;
#X connect 43 0 42 0;
#X connect 44 0 42 0;
#X connect 45 0 42 0;
#X connect 46 0 42 0;
#X connect 47 0 42 0;
#X connect 54 0 37 0;
#X connect 54 0 35 0;
