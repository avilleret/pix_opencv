#N canvas 520 50 430 400 10;
#X declare -lib Gem -path pix_opencv;
#X obj 15 10 cnv 15 400 30 empty empty pix_opencv_athreshold 10 15
0 14 -170816 -1 0;
#X obj 200 17 declare -lib Gem -path pix_opencv;
#X obj 15 50 cnv 15 400 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 20 55 Adaptive threshold object., f 64;
#X obj 15 90 cnv 15 400 30 empty empty empty 20 12 0 14 -191407 -66577
0;
#X text 20 95 Arguments: None, f 64;
#X obj 15 130 cnv 15 400 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 20 135 Description: Thresholding is used to segment an image
by setting all pixels whose intensity values are above a threshold
to a foreground value \, and all the remaining pixels to a background
value., f 64;
#X text 20 185 Keywords: method \, mode \, dim \, blocksize \, maxvalue
\, ----------------------------------------------------------------
See also [pd pix_opencv_athreshold] and [pd INFO], f 64;
#X obj 315 325 cnv 15 100 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X msg 340 340 create;
#N canvas 738 461 450 300 gemwin 0;
#X msg 280 170 0 \, destroy;
#X obj 275 200 gemwin;
#X obj 50 15 inlet;
#X obj 50 35 route create destroy;
#X obj 50 60 t b b;
#X obj 120 200 outlet;
#X obj 108 60 t b b;
#X msg 275 100 0 \, destroy \, reset \, dimen 400 400 \, offset 120
72 \, create \, 1, f 22;
#X obj 150 103 loadbang;
#X msg 50 125 set destroy;
#X msg 150 125 set create \; pd-gemwin vis 0;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 9 0;
#X connect 4 1 7 0;
#X connect 6 0 10 0;
#X connect 6 1 0 0;
#X connect 7 0 1 0;
#X connect 8 0 10 0;
#X connect 9 0 5 0;
#X connect 10 0 5 0;
#X restore 340 360 pd gemwin;
#X obj 25 240 gemhead;
#X obj 25 260 pix_image ../examples/dessin.tif;
#X obj 15 290 cnv 15 400 30 empty empty ==> 10 13 0 12 -204786 -1 0
;
#N canvas 681 261 450 300 pix_opencv_athreshold 0;
#X obj 20 20 inlet;
#X obj 20 220 pix_opencv_athreshold;
#X obj 20 260 outlet;
#N canvas 700 300 450 300 INFO 0;
#X text 20 10 Data collected from: pix_opencv_athreshold.h;
#X text 20 30 This object uses: GemPixObj;
#X text 20 50 ----------------------------------------------------------------
DETAILED DESCRIPTION: ----------------------------------------------------------------
Whereas the conventional thresholding operator uses a global threshold
for all pixels \, adaptive thresholding changes the threshold dynamically
over the image. This more sophisticated version of thresholding can
accommodate changing lighting conditions in the image \, e.g. those
occurring as a result of a strong illumination gradient or shadows.
Adaptive thresholding sets a pixel dst(x \, y) value to <max_value>
if src(x \, y) > T(x \, y) \, or to zero otherwise \, where T(x \,
y) is a threshold calculated individually for each pixel. ----------------------------------------------------------------
FIRST INLET ----------------------------------------------------------------
GEM-SPECIFIC: ----------------------------------------------------------------
(float) \, (list) gemlist ----------------------------------------------------------------
(float): ----------------------------------------------------------------
0 : bypass object rendering ----------------------------------------------------------------
1 : render (default) ----------------------------------------------------------------
(list) gemlist: ----------------------------------------------------------------
The Gem list message... ----------------------------------------------------------------
OBJECT-SPECIFIC: ----------------------------------------------------------------
method (float) \, dim (float) \, mode (float) ----------------------------------------------------------------
method: ----------------------------------------------------------------
0 : CV_ADAPTIVE_THRESH_MEAN_C (default) ----------------------------------------------------------------
The threshold value is the mean of a <blocksize>*<blocksize> neighborhood
of (x \, y) \, minus <dim> parameter value ----------------------------------------------------------------
1 : CV_ADAPTIVE_THRESH_GAUSSIAN_C ----------------------------------------------------------------
The threshold value is the weighted sum (i.e. cross-correlation with
a Gaussian window) of a <blocksize>*<blocksize> neighborhood of (x
\, y) \, minus <dim> parameter value ----------------------------------------------------------------
dim: ----------------------------------------------------------------
[...-3 \, -2 \, -1 \, 0 \, 1 \, 2 \, 3...] : Value to correct the theshold
(default 0) ----------------------------------------------------------------
mode: ----------------------------------------------------------------
0 : normal (default) ----------------------------------------------------------------
1 : inverse ----------------------------------------------------------------
---------------------------------------------------------------- INLET
1 (float) This sets up the <max_value> parameter. [0..255] (default
255) ----------------------------------------------------------------
INLET 2 (float) [3 \, 5 \, 7...] This sets up the <blocksize> parameter.
Only odd numbers. (default 3) ----------------------------------------------------------------
---------------------------------------------------------------- FIRST
OUTLET ----------------------------------------------------------------
GEM-SPECIFIC: ----------------------------------------------------------------
(list) gemlist... ----------------------------------------------------------------
----------------------------------------------------------------,
f 64;
#X restore 380 20 pd INFO;
#X floatatom 294 111 5 0 0 1 blocksize - -;
#X msg 110 129 mode \$1;
#X floatatom 194 112 5 0 0 1 max_val - -;
#X msg 77 42 method \$1;
#X msg 94 86 dim \$1;
#X floatatom 94 67 5 0 0 1 dim - -;
#X obj 110 109 tgl 15 0 empty empty mode 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 0 22 450 300 update 0;
#X msg 139 186 0;
#X msg 79 194 1;
#X obj 123 22 inlet;
#X obj 207 260 outlet;
#X obj 224 15 inlet;
#X obj 106 136 t b b;
#X obj 112 52 t b a;
#X obj 222 95 t b a;
#X obj 283 258 outlet;
#X obj 357 265 outlet;
#X obj 331 17 inlet;
#X obj 329 97 t b a;
#X obj 79 173 del 30;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 4 0 7 0;
#X connect 5 0 12 0;
#X connect 5 1 0 0;
#X connect 6 0 5 0;
#X connect 6 1 3 0;
#X connect 7 0 5 0;
#X connect 7 1 8 0;
#X connect 10 0 11 0;
#X connect 11 0 5 0;
#X connect 11 1 9 0;
#X connect 12 0 1 0;
#X restore 77 187 pd update;
#X obj 76 22 tgl 15 0 empty empty method 17 7 0 10 -262144 -1 -1 0
1;
#X obj 27 162 tgl 15 0 empty empty bypass 17 7 0 10 -262144 -1 -1 0
1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 11 2;
#X connect 5 0 11 0;
#X connect 6 0 11 1;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 8 0;
#X connect 10 0 5 0;
#X connect 11 0 1 0;
#X connect 11 1 1 1;
#X connect 11 2 1 2;
#X connect 12 0 7 0;
#X connect 13 0 1 0;
#X restore 60 296 pd pix_opencv_athreshold;
#X obj 25 340 pix_texture;
#X obj 25 360 square 4;
#X connect 10 0 11 0;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
